name: Build commit

# This workflow is triggered on pushes and pull requests to the repository.
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on:
      windows-latest # For a list of available runner types, refer to
      # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: qlik_qv_export.sln
      #Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@2008f912f56e61277eefaac6d1888b750582aa16

      # Execute all unit tests in the solution
      #- name: Execute unit tests
      #  run: dotnet test

      # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Build application
        run: msbuild $env:Solution_Name /t:build /p:Configuration=$env:Configuration

        env:
          Configuration: ${{ matrix.configuration }}

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: qlik-qv-export-${{ matrix.configuration }}
          path: bin/${{ matrix.configuration }}/**/*
